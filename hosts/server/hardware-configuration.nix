# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "none";
      fsType = "tmpfs";
      options = [ "defaults" "noatime" "size=20%" "mode=755" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/99B0-69BE";
      fsType = "vfat";
    };

  fileSystems."/nix" =
    { device = "rpool/local/nix";
      fsType = "zfs";
      options = [ "zfsutil" ];
    };

  fileSystems."/persist" =
    { device = "rpool/safe/persist";
      fsType = "zfs";
      options = [ "zfsutil" ];
      neededForBoot = true;
    };

  fileSystems."/data" =
    { device = "dataPool";
      fsType = "zfs";
      options = [ "zfsutil" ];
      neededForBoot = true;
    };
  fileSystems."/data/media" =
    { device = "dataPool/media";
      fsType = "zfs";
      options = [ "zfsutil" ];
    };
  fileSystems."/data/photos" =
    { device = "dataPool/photos";
      fsType = "zfs";
      options = [ "zfsutil" ];
    };
  fileSystems."/data/container_data" =
    { device = "dataPool/container_data";
      fsType = "zfs";
      options = [ "zfsutil" ];
    };
  fileSystems."/data/container_data/torrents" =
    { device = "dataPool/container_data/torrents";
      fsType = "zfs";
      options = [ "zfsutil" ];
    };

  fileSystems."/export/photos" = {
    device = "/data/photos";
    options = [ "bind" ];
  };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/3ba36441-4c9c-45ab-b586-d7b5ef07a4b4"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
